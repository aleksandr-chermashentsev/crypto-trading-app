apiVersion: apps/v1
kind: Deployment
metadata:
  name: "robot-service"
spec:
  selector:
    matchLabels:
      app: "robot-service"
  template:
    metadata:
      labels:
        app: "robot-service"
    spec:
      containers:
        - name: "consul"
          image: "consul:latest"
          ports:
            - name: http
              containerPort: 8500
        - name: "database-persist"
          image: "gcr.io/crypto-stock-app-310819/database-persist:0.101"
          resources:
            limits:
              memory: "64Mi"
          ports:
            - name: http
              containerPort: 8081
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
          volumeMounts:
            - mountPath: /home/app/db
              name: db-storage
        - name: "tg-bot-notifier"
          image: "gcr.io/crypto-stock-app-310819/tg-bot-notifier:0.101"
          env:
            - name: telegram.token
              valueFrom:
                secretKeyRef:
                  name: crypto-stock-app-secrets
                  key: telegram.token
            - name: telegram.adminUsername
              valueFrom:
                secretKeyRef:
                  name: crypto-stock-app-secrets
                  key: telegram.adminUsername
            - name: telegram.adminChatId
              valueFrom:
                secretKeyRef:
                  name: crypto-stock-app-secrets
                  key: telegram.adminChatId
          ports:
            - name: http
              containerPort: 8082
          resources:
            limits:
              memory: "64Mi"
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8082
            initialDelaySeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8082
            initialDelaySeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
        - name: "robot-impl"
          image: "gcr.io/crypto-stock-app-310819/robot-impl:0.101"
          resources:
            limits:
              memory: "128Mi"
          env:
            - name: exchange.binance.api.secret
              valueFrom:
                secretKeyRef:
                  name: crypto-stock-app-secrets
                  key: exchange.binance.api.secret
            - name: exchange.binance.api.key
              valueFrom:
                secretKeyRef:
                  name: crypto-stock-app-secrets
                  key: exchange.binance.api.key
          volumeMounts:
            - name: config
              mountPath: "/home/app/resources/prod"
              readOnly: false
          ports:
            - name: http
              containerPort: 8083
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8083
            initialDelaySeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8083
            initialDelaySeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: db-storage-claim
        - name: config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: robot-impl-config
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "application.yml"
                path: "application.yml"
