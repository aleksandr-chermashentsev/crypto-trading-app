syntax = "proto3";

option java_multiple_files = true;
option java_package = "ru.avca.grpcservices";
option java_outer_classname = "GrpcServicesProto";

package tradenotifier;

service TradeNotifier {
  rpc Trade (RobotTradeEvent) returns (EventResponse) {}
}

service RobotStateService {
  rpc UpdateOpenPositions (OpenPositionsMsg) returns (Empty);
  rpc GetAllOpenPositions (Empty) returns (OpenPositionsMsg);
  rpc SaveCurrencyBalance (CurrencyBalanceMsg) returns (Empty);
  rpc GetAllCurrencyBalance (Empty) returns (CurrencyBalancesMsg);
}

service RobotStateManager {
  rpc ClosePositions (ClosePositionsMsg) returns (ClosePositionsResponse);
  rpc SetUsdBalance (SetUsdBalanceMsg) returns (SetUsdBalanceResponse);
}

message OpenPositionsMsg {
  repeated OpenPositionMsg openPositions = 1;
}

message OpenPositionMsg {
  string symbol = 1;
  string price = 2;
  string balance = 3;
}

message CurrencyBalancesMsg {
  repeated CurrencyBalanceMsg currencyBalances = 1;
}

message CurrencyBalanceMsg {
  string symbol = 1;
  string balance = 2;
}

message Empty {}


message RobotTradeEvent {
  enum TradeSide {
    UNKNOWN = 0;
    BUY = 1;
    SELL = 2;
  }
  string symbol = 1;
  double baseQty = 2;
  double quoteQty = 3;
  TradeSide side = 4;
  double expectedPrice = 5;
}

message EventResponse {
  bool isHandled = 1; //todo really need this?
}

message SetUsdBalanceMsg {
  string balance = 1;
}

message SetUsdBalanceResponse {
  bool success = 1;
}

message ClosePositionsMsg {
  repeated string symbols = 1; //if empty, than close all
}

message ClosePositionsResponse {
  bool success = 1;
}